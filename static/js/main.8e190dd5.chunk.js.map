{"version":3,"sources":["images/favicon.png","serviceWorker.js","algorithms/bfs.js","Components/Toturial/Toturial.jsx","Components/Pathfinding/node.js","algorithms/dfs.js","algorithms/aStar.js","algorithms/dijkstra.js","Components/Pathfinding/Pathfinding.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","pathSize","Toturial","props","state","toturialClasses","toturialNumber","changeToturial","bind","skipButton","bottunName","this","length","document","getElementById","style","display","setState","id","class","className","backgroundColor","href","target","rel","onClick","React","Component","node","height","width","status","parent","g","h","f","distance","Infinity","Deque","require","checkNeighbors","currentPoint","maze","gray","TARGET","SPACE","GRAY","push","ShowPath","animation","temp","START","PATH","i","bfs","startPoint","targetPoint","bfsRun","shift","VISITED","bfsImplementation","JSON","parse","stringify","dfs","dfsRun","pop","dfsImplementation","heuristic","nx","ny","ex","ey","Math","abs","getNeighbors","grid","ret","x","y","aStar","openList","lowInd","currentNode","splice","neighbors","neighbor","WALL","gScore","gScoreIsBest","includes","aStarImplementation","PrioritGray","dijkstra","dijkstraRun","indx","w","dijkstraImplementation","Pathfinding","toggleHamburgerIconClass","e","isClose","algorithm","nodeSize","isAlgorithmRun","animations","visitedNodesNumber","pathNodesNumber","showPath","innerWidth","innerHeight","clearBoard","speed","previousStartNodeStatus","previousEndNodeStatus","mouseIsPressed","startNodePressed","EndNodePressed","setUpGrid","updateWindowDimensions","changeSize","runAlgorithm","changeBoard","runanimation","onMouseDown","onMouseEnter","onMouseUp","addEventListener","removeEventListener","size","floor","clearpath","j","random","xStart","yStart","xEnd","yEnd","withAnimations","fun","result","changePath","setTimeout","rowIdx","nodeIdx","startNode","endNode","src","alt","type","data-toggle","cursor","map","row","key","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e190dd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.4cff88f9.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  SPACE,\r\n  START,\r\n  TARGET,\r\n  VISITED,\r\n  GRAY,\r\n  PATH,\r\n} from \"../Components/Pathfinding/Pathfinding\";\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize;\r\n\r\nfunction bfs(maze, startPoint, targetPoint) {\r\n  let animation = [];\r\n  pathSize = 0;\r\n  var tempMaze = JSON.parse(JSON.stringify(maze));\r\n\r\n  bfsImplementation(tempMaze, startPoint, targetPoint, animation);\r\n\r\n  return { pathSize: pathSize, animation: animation };\r\n}\r\n\r\nfunction bfsImplementation(maze, startPoint, targetPoint, animation) {\r\n  var bfsRun = true;\r\n  var currentPoint;\r\n\r\n  var gray = new Deque();\r\n  gray.push(startPoint);\r\n\r\n  while (bfsRun) {\r\n    if (gray.length === 0) bfsRun = false;\r\n    // there is no path to the target\r\n    else {\r\n      // gray is not empty\r\n\r\n      currentPoint = gray.shift(); // this will be the parent\r\n\r\n      if (maze[currentPoint.height][currentPoint.width].status === TARGET)\r\n        // we have found the target\r\n        bfsRun = false;\r\n      else {\r\n        // paint current VISITED\r\n        if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n          maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n          animation.push([\r\n            VISITED,\r\n            maze[currentPoint.height][currentPoint.width],\r\n          ]);\r\n        }\r\n\r\n        // check non-visited neighbors\r\n\r\n        // go up\r\n        if (bfsRun && currentPoint.height + 1 < maze.length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height + 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go down\r\n        if (bfsRun && currentPoint.height > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height - 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go right\r\n        if (bfsRun && currentPoint.width + 1 < maze[0].length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width + 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go left\r\n        if (bfsRun && currentPoint.width > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width - 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        if (!bfsRun)\r\n          // target was found\r\n          ShowPath(currentPoint, maze, animation);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n  if (maze[height][width].status === TARGET) return false;\r\n\r\n  if (maze[height][width].status === SPACE) {\r\n    // add it to gray\r\n    maze[height][width].status = GRAY;\r\n    maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n    gray.push(maze[height][width]);\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n  let temp = [];\r\n  while (node.status !== START) {\r\n    temp.push([PATH, maze[node.height][node.width]]);\r\n    node = maze[node.parent[0]][node.parent[1]];\r\n  }\r\n  pathSize = temp.length;\r\n\r\n  for (var i = temp.length - 1; i >= 0; i--) animation.push(temp[i]);\r\n}\r\n\r\nexport default bfs;\r\n","import React from \"react\";\r\nimport \"./Toturial.css\";\r\nimport pathfindingPic from \"../../images/favicon.png\";\r\n\r\nclass Toturial extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      toturialClasses: [\r\n        \"first-toturial\",\r\n        \"secend-toturial\",\r\n        \"third-toturial\",\r\n        \"fourth-toturial\",\r\n      ],\r\n      toturialNumber: 0,\r\n    };\r\n\r\n    this.changeToturial = this.changeToturial.bind(this);\r\n    this.skipButton = this.skipButton.bind(this);\r\n  }\r\n\r\n  changeToturial(bottunName) {\r\n    if (bottunName === \"next\") {\r\n      if (this.state.toturialNumber < this.state.toturialClasses.length - 1) {\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber]\r\n        ).style.display = \"none\";\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber + 1]\r\n        ).style.display = \"inline-block\";\r\n        this.setState({ toturialNumber: this.state.toturialNumber + 1 });\r\n      }\r\n    }\r\n    if (bottunName === \"prev\") {\r\n      if (this.state.toturialNumber > 0) {\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber]\r\n        ).style.display = \"none\";\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber - 1]\r\n        ).style.display = \"inline-block\";\r\n        this.setState({ toturialNumber: this.state.toturialNumber - 1 });\r\n      }\r\n    }\r\n  }\r\n\r\n  skipButton() {\r\n    document.getElementById(\"fullscreen\").style.display = \"none\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"fullscreen\" class=\"container-fluid\">\r\n        <div id=\"tutorial\" className=\"mainContainer\">\r\n          {/* --------------------------------------------------------------------------- */}\r\n          <div className=\"section\" id=\"first-toturial\">\r\n            <h3 className=\"title\">Pathfinding Visualizer Toturial</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">\r\n              Pathfinding algorithm find the shortest route between two points.\r\n            </h5>\r\n            <h6 className=\"paragraph\">\r\n              In this application you can see various pathfinding algorithms in\r\n              action, and how it work\r\n            </h6>\r\n            {/* <img\r\n            src={pathfindingPic}\r\n            alt=\"pathfinding project\"\r\n            className=\"pathfinding-img\"\r\n          ></img> */}\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n          <div className=\"section\" id=\"secend-toturial\">\r\n            <h3 className=\"title\">First Step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">Choose an algorithm to visualize</h5>\r\n\r\n            <h6 className=\"item animation1\">Breadth First Search (BFS)</h6>\r\n            <h6 className=\"item animation2\">Depth First Search (DFS)</h6>\r\n            <h6 className=\"item animation3\">Dijkstra Algorithm</h6>\r\n            <h6 className=\"item animation4\">A* Search</h6>\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"section\" id=\"third-toturial\">\r\n            <h3 className=\"title\">Secend step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n            <h5 className=\"paragraph\">Choose between clear board or maze.</h5>\r\n            <h6 className=\"paragraph\">\r\n              also you can add walls to the board by click on the node.\r\n            </h6>\r\n            <h6 className=\"paragraph\">\r\n              or move the start / end node by handle clicking and draging the\r\n              node even after the algorithm has finished running.\r\n            </h6>\r\n          </div>\r\n\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"section\" id=\"fourth-toturial\">\r\n            <h3 className=\"title\">Third Step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">\r\n              Choose the nodes size from three different sizes\r\n            </h5>\r\n            <h5 className=\"sub-title\">\r\n              And, change the algorthim speed from three different speeds\r\n            </h5>\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"buttons\">\r\n            <a\r\n              href=\"https://alikhutaba.github.io/Pathfinding-Viusualizer/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Full Video Toturial\r\n            </a>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => this.changeToturial(\"prev\")}\r\n            >\r\n              Previes\r\n            </button>\r\n            <button className=\"btn btn-info\" onClick={() => this.skipButton()}>\r\n              Skip\r\n            </button>\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => this.changeToturial(\"next\")}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toturial;\r\n","class node {\r\n  constructor(id, height, width, status) {\r\n    this.id = id;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.status = status;\r\n    this.parent = null;\r\n    this.g = 0;\r\n    this.h = 0;\r\n    this.f = this.g + this.h;\r\n    this.distance = Infinity;\r\n  }\r\n}\r\n\r\nexport default node;\r\n\r\n// module.exports = node;\r\n","\r\nimport { SPACE, START, TARGET, VISITED, PATH } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize\r\n\r\nfunction dfs(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dfsImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dfsImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    let dfsRun = true\r\n    var currentPoint\r\n\r\n    var gray = new Deque();\r\n    gray.push(startPoint)\r\n\r\n    while (dfsRun) {\r\n\r\n        if (gray.length === 0)\r\n            dfsRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            currentPoint = gray.pop() // this will be the parent\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dfsRun = false;\r\n\r\n            else {\r\n\r\n                // paint pt VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n                // go right\r\n                if (dfsRun && currentPoint.width + 1 < maze[0].length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width + 1, maze, gray)\r\n\r\n                // go up\r\n                if (dfsRun && currentPoint.height + 1 < maze.length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height + 1, currentPoint.width, maze, gray)\r\n\r\n                // go left\r\n                if (dfsRun && currentPoint.width > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width - 1, maze, gray)\r\n\r\n                // go down\r\n                if (dfsRun && currentPoint.height > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height - 1, currentPoint.width, maze, gray)\r\n\r\n                if (!dfsRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n\r\n    if (maze[height][width].status === TARGET)\r\n        return false\r\n\r\n    if (maze[height][width].status === SPACE) {\r\n        // add it to gray\r\n        // maze[height][width].status = GRAY;\r\n        maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n        gray.push(maze[height][width])\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\nexport default dfs;","\r\nimport { START, TARGET, VISITED, PATH, WALL } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction aStar(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    aStarImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\n\r\nfunction aStarImplementation(grid, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var openList = [];\r\n    openList.push(startPoint);\r\n\r\n    while (openList.length > 0) {\r\n\r\n        var lowInd = 0;\r\n        for (let i = 0; i < openList.length; i++) {\r\n            if (openList[i].f <= openList[lowInd].f) { lowInd = i; }\r\n        }\r\n        var currentNode = openList[lowInd];\r\n        openList.splice(lowInd, 1)\r\n\r\n        if (grid[currentNode.height][currentNode.width].status === TARGET) {\r\n            ShowPath(currentNode.parent, grid, animation)\r\n            return\r\n        }\r\n\r\n        if (grid[currentNode.height][currentNode.width].status !== START) {\r\n            grid[currentNode.height][currentNode.width].status = VISITED;\r\n            animation.push([VISITED, grid[currentNode.height][currentNode.width]])\r\n        }\r\n\r\n        var neighbors = getNeighbors(grid, currentNode);\r\n\r\n        for (let i = 0; i < neighbors.length; i++) {\r\n            var neighbor = neighbors[i];\r\n            if (neighbor.status === VISITED || neighbor.status === WALL)\r\n                continue;\r\n\r\n            var gScore = currentNode.g + 1;\r\n            var gScoreIsBest = false;\r\n\r\n\r\n            if (!openList.includes(neighbor)) {\r\n\r\n                gScoreIsBest = true;\r\n                neighbor.g = gScore\r\n                neighbor.h = heuristic(neighbor.height, neighbor.width, targetPoint.height, targetPoint.width);\r\n                openList.push(neighbor);\r\n            }\r\n            else if (gScore < neighbor.g) {\r\n                gScoreIsBest = true;\r\n            }\r\n\r\n            if (gScoreIsBest) {\r\n                neighbor.parent = currentNode;\r\n                neighbor.g = gScore;\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nfunction heuristic(nx, ny, ex, ey) {\r\n    var d1 = Math.abs(ex - nx);\r\n    var d2 = Math.abs(ey - ny);\r\n    return d1 + d2;\r\n}\r\n\r\nfunction getNeighbors(grid, node) {\r\n    var ret = [];\r\n    var x = node.height;\r\n    var y = node.width;\r\n\r\n    if (grid[x - 1] && grid[x - 1][y]) {\r\n        ret.push(grid[x - 1][y]);\r\n    }\r\n    if (grid[x + 1] && grid[x + 1][y]) {\r\n        ret.push(grid[x + 1][y]);\r\n    }\r\n    if (grid[x][y - 1] && grid[x][y - 1]) {\r\n        ret.push(grid[x][y - 1]);\r\n    }\r\n    if (grid[x][y + 1] && grid[x][y + 1]) {\r\n        ret.push(grid[x][y + 1]);\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction ShowPath(node, grid, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, grid[node.height][node.width]])\r\n        node = node.parent\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n}\r\n\r\nexport default aStar;\r\n\r\n","\r\n\r\nimport { SPACE, START, TARGET, VISITED, GRAY, PATH } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction dijkstra(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dijkstraImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dijkstraImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var dijkstraRun = true\r\n    var currentPoint\r\n\r\n    var PrioritGray = []\r\n    PrioritGray.push(startPoint)\r\n\r\n\r\n    while (dijkstraRun) {\r\n\r\n        if (PrioritGray.length === 0)\r\n            dijkstraRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            // this will be the parent\r\n            var indx = 0\r\n            for (var w = 0; w < PrioritGray.length; w++) {\r\n                if (PrioritGray[w].distance > PrioritGray[indx].distance) {\r\n                    indx = w\r\n                }\r\n            }\r\n            currentPoint = PrioritGray[indx]\r\n            PrioritGray.splice(indx, 1)\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dijkstraRun = false;\r\n\r\n            else {\r\n\r\n                // paint current VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n\r\n                // go up\r\n                if (dijkstraRun && currentPoint.height > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height - 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go down\r\n                if (dijkstraRun && currentPoint.height + 1 < maze.length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height + 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go right\r\n                if (dijkstraRun && currentPoint.width + 1 < maze[0].length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width + 1, maze, PrioritGray)\r\n\r\n                // go left\r\n                if (dijkstraRun && currentPoint.width > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width - 1, maze, PrioritGray)\r\n\r\n                if (!dijkstraRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, targetPoint, height, width, maze, PrioritGray) {\r\n\r\n    var neighbor = maze[height][width]\r\n\r\n    if (neighbor.status === TARGET)\r\n        return false\r\n\r\n    if (neighbor.status === SPACE) {\r\n        // add it to gray\r\n        neighbor.status = GRAY;\r\n        neighbor.parent = [currentPoint.height, currentPoint.width];\r\n\r\n        neighbor.distance = currentPoint.distance + 1\r\n\r\n\r\n        maze[height][width] = neighbor\r\n        PrioritGray.push(neighbor)\r\n    }\r\n\r\n\r\n    return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\n\r\nexport default dijkstra;","import React from \"react\";\r\n\r\nimport \"./Pathfinding.css\";\r\nimport node from \"./node.js\";\r\n\r\nimport bfs from \"../../algorithms/bfs.js\";\r\nimport dfs from \"../../algorithms/dfs.js\";\r\nimport aStar from \"../../algorithms/aStar.js\";\r\nimport dijkstra from \"../../algorithms/dijkstra.js\";\r\n\r\nexport const WALL = \"wall\";\r\nexport const SPACE = \"space\";\r\nexport const START = \"start\";\r\nexport const TARGET = \"target\";\r\nexport const VISITED = \"visit\";\r\nexport const GRAY = \"gray\";\r\nexport const PATH = \"path\";\r\n\r\nexport const BFS = \"BFS\";\r\nexport const DFS = \"DFS\";\r\nexport const ASTAR = \"A* Search\";\r\nexport const DIJKSTRA = \"Dijkstra\";\r\n\r\nconst BIG_NODE_SIZE = 45;\r\nconst MEDIUM_NODE_SIZE = 35;\r\nconst SMALL_NODE_SIZE = 25;\r\n\r\nconst FAST = 1;\r\nconst AVERAGE = 25;\r\nconst SLOW = 50;\r\n\r\nclass Pathfinding extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      grid: [],\r\n      algorithm: \"\",\r\n      nodeSize: SMALL_NODE_SIZE,\r\n      startPoint: { height: 1, width: 1 },\r\n      targetPoint: { height: 2, width: 2 },\r\n      isAlgorithmRun: false,\r\n      animations: [],\r\n      visitedNodesNumber: 0,\r\n      pathNodesNumber: 0,\r\n      showPath: false,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      clearBoard: true,\r\n      speed: AVERAGE,\r\n      previousStartNodeStatus: SPACE,\r\n      previousEndNodeStatus: SPACE,\r\n      mouseIsPressed: false,\r\n      startNodePressed: false,\r\n      EndNodePressed: false,\r\n      isClose: true,\r\n    };\r\n\r\n    this.setUpGrid = this.setUpGrid.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.runAlgorithm = this.runAlgorithm.bind(this);\r\n    this.changeBoard = this.changeBoard.bind(this);\r\n    this.runanimation = this.runanimation.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    if (!this.state.isAlgorithmRun)\r\n      this.setUpGrid(this.state.nodeSize, this.state.clearBoard);\r\n  }\r\n\r\n  async setUpGrid(size, clearBoard) {\r\n    const grid = [];\r\n    let i, j;\r\n    let height = Math.floor((this.state.height - 160) / size);\r\n    let width = Math.floor((this.state.width - 50) / size);\r\n\r\n    await this.clearpath();\r\n\r\n    let id = 0;\r\n    for (i = 0; i < height; i++) {\r\n      grid[i] = [];\r\n      for (j = 0; j < width; j++) {\r\n        grid[i][j] = new node(++id, i, j, SPACE);\r\n      }\r\n    }\r\n\r\n    // set walls\r\n    if (!clearBoard) {\r\n      for (i = 1; i < height - 1; i++) {\r\n        for (j = 1; j < width - 1; j++) {\r\n          if (i % 2 === 0) {\r\n            // mostly walls\r\n            if (Math.random() * 100 < 35) grid[i][j].status = WALL;\r\n          } else {\r\n            // mostly spaces\r\n            if (Math.random() * 100 < 25) grid[i][j].status = WALL;\r\n          }\r\n        }\r\n      }\r\n      let xStart = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yStart = Math.floor(Math.random() * (width - 1) + 1);\r\n      let xEnd = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yEnd = Math.floor(Math.random() * (width - 1) + 1);\r\n      grid[xStart][yStart].status = START;\r\n      grid[xEnd][yEnd].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[xEnd][yEnd],\r\n        startPoint: grid[xStart][yStart],\r\n      });\r\n    } else {\r\n      grid[5][5].status = START;\r\n      grid[height - 5][width - 5].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[height - 5][width - 5],\r\n        startPoint: grid[5][5],\r\n      });\r\n    }\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  async runAlgorithm(grid, algorithm, startPoint, targetPoint, withAnimations) {\r\n    if (algorithm === \"\") return;\r\n\r\n    let fun =\r\n      algorithm === BFS\r\n        ? bfs\r\n        : algorithm === DFS\r\n        ? dfs\r\n        : algorithm === ASTAR\r\n        ? aStar\r\n        : algorithm === DIJKSTRA\r\n        ? dijkstra\r\n        : null;\r\n\r\n    if (!fun) return;\r\n\r\n    await this.clearpath();\r\n    var result = fun(grid, startPoint, targetPoint);\r\n\r\n    this.setState({\r\n      animations: result.animation,\r\n      isAlgorithmRun: true,\r\n      pathNodesNumber: result.pathSize,\r\n      visitedNodesNumber: result.animation.length - result.pathSize,\r\n      showPath: true,\r\n    });\r\n\r\n    if (withAnimations)\r\n      this.runanimation(JSON.parse(JSON.stringify(result.animation)));\r\n    else this.changePath(result.animation);\r\n  }\r\n\r\n  runanimation(animations) {\r\n    if (!animations.length) {\r\n      setTimeout(() => {\r\n        this.setState({ isAlgorithmRun: false });\r\n      }, 100);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      var node = animations[0][1];\r\n\r\n      if (animations[0][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node\";\r\n\r\n      animations.shift();\r\n      this.runanimation(animations);\r\n    }, this.state.speed);\r\n  }\r\n\r\n  changePath(animations) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      var node = animations[i][1];\r\n      if (animations[i][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node2\";\r\n    }\r\n    this.setState({ isAlgorithmRun: false });\r\n  }\r\n\r\n  async clearpath() {\r\n    const animations = this.state.animations;\r\n    const grid = this.state.grid;\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const node = animations[i][1];\r\n\r\n      if (grid[node.height][node.width].status === SPACE)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"space-node\";\r\n\r\n      if (grid[node.height][node.width].status === WALL)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"wall-node\";\r\n\r\n      grid[node.height][node.width].h = 0;\r\n      grid[node.height][node.width].g = 0;\r\n      grid[node.height][node.width].distance = Infinity;\r\n    }\r\n    this.setState({\r\n      grid: grid,\r\n      animations: [],\r\n      pathNodesNumber: 0,\r\n      visitedNodesNumber: 0,\r\n      showPath: false,\r\n    });\r\n  }\r\n\r\n  changeBoard(status) {\r\n    this.setState({ clearBoard: status });\r\n    this.setUpGrid(this.state.nodeSize, status);\r\n  }\r\n\r\n  changeSize(size) {\r\n    this.setState({ nodeSize: size });\r\n    this.setUpGrid(size, this.state.clearBoard);\r\n  }\r\n\r\n  onMouseDown(rowIdx, nodeIdx) {\r\n    const grid = this.state.grid;\r\n    var node = grid[rowIdx][nodeIdx];\r\n\r\n    grid[rowIdx][nodeIdx].status =\r\n      node.status === WALL ? SPACE : node.status === SPACE ? WALL : node.status;\r\n\r\n    if (grid[rowIdx][nodeIdx].status === START)\r\n      this.setState({ startNodePressed: true });\r\n\r\n    if (grid[rowIdx][nodeIdx].status === TARGET)\r\n      this.setState({ EndNodePressed: true });\r\n\r\n    this.setState({ grid: grid, mouseIsPressed: true });\r\n  }\r\n\r\n  onMouseEnter(rowIdx, nodeIdx) {\r\n    if (!this.state.mouseIsPressed) return;\r\n\r\n    const grid = this.state.grid;\r\n\r\n    if (!this.state.startNodePressed && !this.state.EndNodePressed) {\r\n      var node = grid[rowIdx][nodeIdx];\r\n      grid[rowIdx][nodeIdx].status =\r\n        node.status === WALL\r\n          ? SPACE\r\n          : node.status === SPACE\r\n          ? WALL\r\n          : node.status;\r\n    }\r\n\r\n    if (\r\n      this.state.startNodePressed &&\r\n      grid[rowIdx][nodeIdx].status !== TARGET\r\n    ) {\r\n      let startNode = this.state.startPoint;\r\n      let previousStartNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[startNode.height][\r\n        startNode.width\r\n      ].status = this.state.previousStartNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = START;\r\n      this.setState({\r\n        startPoint: grid[rowIdx][nodeIdx],\r\n        previousStartNodeStatus: previousStartNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          grid[rowIdx][nodeIdx],\r\n          this.state.targetPoint,\r\n          false\r\n        );\r\n    }\r\n\r\n    if (this.state.EndNodePressed && grid[rowIdx][nodeIdx].status !== START) {\r\n      let endNode = this.state.targetPoint;\r\n      let previousEndNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[endNode.height][\r\n        endNode.width\r\n      ].status = this.state.previousEndNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[rowIdx][nodeIdx],\r\n        previousEndNodeStatus: previousEndNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          this.state.startPoint,\r\n          grid[rowIdx][nodeIdx],\r\n          false\r\n        );\r\n    }\r\n\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  onMouseUp() {\r\n    if (this.state.startNodePressed)\r\n      this.setState({ mouseIsPressed: false, startNodePressed: false });\r\n    else if (this.state.EndNodePressed)\r\n      this.setState({ mouseIsPressed: false, EndNodePressed: false });\r\n    else this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  toggleHamburgerIconClass = (e) => {\r\n    this.setState({ isClose: !this.state.isClose });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      grid,\r\n      algorithm,\r\n      startPoint,\r\n      targetPoint,\r\n      isAlgorithmRun,\r\n      nodeSize,\r\n      visitedNodesNumber,\r\n      pathNodesNumber,\r\n      showPath,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        {/* toolbar */}\r\n        <div className=\"main-bar row\">\r\n          <div className=\"hamburger-menu\">\r\n            <div\r\n              id=\"hamburger-icon\"\r\n              className={this.state.isClose ? \"\" : \"open\"}\r\n              onClick={this.toggleHamburgerIconClass}\r\n            >\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n          {/* MENU --------------------------------------------------------------------- */}\r\n          <div id=\"menu\" className={this.state.isClose ? \"\" : \"op\"}>\r\n            {/* DEV */}\r\n            <div className=\"devop\">\r\n              <h6 className=\"developed\">Developed by</h6>\r\n              <h6 className=\"developed\">Ali Khutaba</h6>\r\n            </div>\r\n            {/* DEV */}\r\n            <div className=\"social-pic\">\r\n              <a\r\n                href=\"https://www.linkedin.com/in/ali-khutaba-843627173/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"linkedin-img\"\r\n                  src=\"https://www.freepnglogos.com/uploads/linkedin-logo-hd-png-3.png\"\r\n                  alt=\"Click her\"\r\n                ></img>\r\n              </a>\r\n            </div>\r\n\r\n            {/* Github */}\r\n            <div className=\"social-pic\">\r\n              <a\r\n                href=\"https://github.com/alikhutaba\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"github-img\"\r\n                  src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/i/2b14985a-c66e-4dbd-b09c-609fe0678dae/d5ariic-ff63c049-4a2e-46bb-bae5-a420d50a4e54.png\"\r\n                  alt=\"Click her\"\r\n                ></img>\r\n              </a>\r\n            </div>\r\n\r\n            {/* algorithm Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                {algorithm === \"\" ? \"Algorithm\" : algorithm}\r\n                <a className=\"dropdown-toggle\"></a>{\" \"}\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: BFS })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\" dropdown-item\"\r\n                >\r\n                  <h6>Breadth First Search (BFS)</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: DFS })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Depth First Search (DFS)</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: DIJKSTRA })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Dijkstra Algorithm</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: ASTAR })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>A* Search</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* board Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Board<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun ? () => this.changeBoard(false) : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Random Maze</h6>\r\n                </button>\r\n                <button\r\n                  onClick={!isAlgorithmRun ? () => this.clearpath() : null}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Clear Path</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun ? () => this.changeBoard(true) : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Clear Board</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Size Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Nodes<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(BIG_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Big Nodes</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(MEDIUM_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Medium Nodes</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(SMALL_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Small Nodes</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Size Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Speed<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={() => this.setState({ speed: FAST })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Fast</h6>\r\n                </button>\r\n                <button\r\n                  onClick={() => this.setState({ speed: AVERAGE })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Average</h6>\r\n                </button>\r\n                <button\r\n                  onClick={() => this.setState({ speed: SLOW })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Slow</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* run algorithm */}\r\n          <div className=\"main-button run-button\">\r\n            <button\r\n              onClick={\r\n                !isAlgorithmRun\r\n                  ? () =>\r\n                      this.runAlgorithm(\r\n                        grid,\r\n                        algorithm,\r\n                        startPoint,\r\n                        targetPoint,\r\n                        true\r\n                      )\r\n                  : null\r\n              }\r\n              style={isAlgorithmRun ? { cursor: \"not-allowed\" } : null}\r\n              type=\"button\"\r\n              className=\" btn btn-outline-danger\"\r\n            >\r\n              {!isAlgorithmRun ? \"Run\" : algorithm}\r\n            </button>\r\n          </div>\r\n\r\n          {/* info */}\r\n          <div className=\"info\">\r\n            <div>\r\n              <h6 className=\"info-font\">\r\n                {algorithm === \"\"\r\n                  ? \"Choose an algorithm\"\r\n                  : \"Algorithm : \" + algorithm}\r\n              </h6>\r\n            </div>\r\n            <div>\r\n              <h6\r\n                className=\"info-font\"\r\n                style={{ display: showPath ? \"block\" : \"none\" }}\r\n              >\r\n                Visited {visitedNodesNumber} Nodes. Path length{\" \"}\r\n                {pathNodesNumber}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-12\" id=\"mainBoardID\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  return (\r\n                    <div\r\n                      id={`${rowIdx}-${nodeIdx}`}\r\n                      key={nodeIdx}\r\n                      className={\r\n                        node.status === SPACE\r\n                          ? \"space-node\"\r\n                          : node.status === WALL\r\n                          ? \"wall-node\"\r\n                          : node.status === VISITED\r\n                          ? \"visit-node\"\r\n                          : node.status === PATH\r\n                          ? \"path-node\"\r\n                          : node.status === START\r\n                          ? \"start-node\"\r\n                          : node.status === TARGET\r\n                          ? \"target-node\"\r\n                          : \"space-node\"\r\n                      }\r\n                      style={{\r\n                        height: nodeSize + \"px\",\r\n                        width: nodeSize + \"px\",\r\n                      }}\r\n                      onMouseDown={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseDown(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseEnter={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseEnter(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseUp={\r\n                        !isAlgorithmRun ? () => this.onMouseUp() : null\r\n                      }\r\n                    ></div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pathfinding;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Toturial from \"./Components/Toturial/Toturial\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nimport Pathfinding from \"./Components/Pathfinding/Pathfinding\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Toturial></Toturial>\n    <Pathfinding />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}