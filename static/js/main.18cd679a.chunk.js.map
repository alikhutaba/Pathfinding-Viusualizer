{"version":3,"sources":["serviceWorker.js","algorithms/bfs.js","Components/Pathfinding/node.js","algorithms/dfs.js","algorithms/aStar.js","algorithms/dijkstra.js","Components/Pathfinding/Pathfinding.jsx","index.js"],"names":["Boolean","window","location","hostname","match","pathSize","node","id","height","width","status","this","parent","g","h","f","distance","Infinity","Deque","require","checkNeighbors","currentPoint","maze","gray","TARGET","SPACE","GRAY","push","ShowPath","animation","temp","START","PATH","length","i","bfs","startPoint","targetPoint","bfsRun","shift","VISITED","bfsImplementation","JSON","parse","stringify","dfs","dfsRun","pop","dfsImplementation","heuristic","nx","ny","ex","ey","Math","abs","getNeighbors","grid","ret","x","y","aStar","openList","lowInd","currentNode","splice","neighbors","neighbor","WALL","gScore","gScoreIsBest","includes","aStarImplementation","PrioritGray","dijkstra","dijkstraRun","indx","w","dijkstraImplementation","Pathfinding","props","state","algorithm","nodeSize","isAlgorithmRun","animations","visitedNodesNumber","pathNodesNumber","showPath","innerWidth","innerHeight","clearBoard","speed","previousStartNodeStatus","previousEndNodeStatus","mouseIsPressed","startNodePressed","EndNodePressed","setUpGrid","bind","updateWindowDimensions","changeSize","runAlgorithm","changeBoard","runanimation","onMouseDown","onMouseEnter","onMouseUp","addEventListener","removeEventListener","setState","size","floor","clearpath","j","random","xStart","yStart","xEnd","yEnd","withAnimations","fun","result","changePath","setTimeout","document","getElementById","className","rowIdx","nodeIdx","startNode","endNode","href","target","rel","src","alt","type","data-toggle","onClick","style","cursor","display","map","row","key","React","Component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.18cd679a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  SPACE,\r\n  START,\r\n  TARGET,\r\n  VISITED,\r\n  GRAY,\r\n  PATH,\r\n} from \"../Components/Pathfinding/Pathfinding\";\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize;\r\n\r\nfunction bfs(maze, startPoint, targetPoint) {\r\n  let animation = [];\r\n  pathSize = 0;\r\n  var tempMaze = JSON.parse(JSON.stringify(maze));\r\n\r\n  bfsImplementation(tempMaze, startPoint, targetPoint, animation);\r\n\r\n  return { pathSize: pathSize, animation: animation };\r\n}\r\n\r\nfunction bfsImplementation(maze, startPoint, targetPoint, animation) {\r\n  var bfsRun = true;\r\n  var currentPoint;\r\n\r\n  var gray = new Deque();\r\n  gray.push(startPoint);\r\n\r\n  while (bfsRun) {\r\n    if (gray.length === 0) bfsRun = false;\r\n    // there is no path to the target\r\n    else {\r\n      // gray is not empty\r\n\r\n      currentPoint = gray.shift(); // this will be the parent\r\n\r\n      if (maze[currentPoint.height][currentPoint.width].status === TARGET)\r\n        // we have found the target\r\n        bfsRun = false;\r\n      else {\r\n        // paint current VISITED\r\n        if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n          maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n          animation.push([\r\n            VISITED,\r\n            maze[currentPoint.height][currentPoint.width],\r\n          ]);\r\n        }\r\n\r\n        // check non-visited neighbors\r\n\r\n        // go up\r\n        if (bfsRun && currentPoint.height + 1 < maze.length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height + 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go down\r\n        if (bfsRun && currentPoint.height > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height - 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go right\r\n        if (bfsRun && currentPoint.width + 1 < maze[0].length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width + 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go left\r\n        if (bfsRun && currentPoint.width > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width - 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        if (!bfsRun)\r\n          // target was found\r\n          ShowPath(currentPoint, maze, animation);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n  if (maze[height][width].status === TARGET) return false;\r\n\r\n  if (maze[height][width].status === SPACE) {\r\n    // add it to gray\r\n    maze[height][width].status = GRAY;\r\n    maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n    gray.push(maze[height][width]);\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n  let temp = [];\r\n  while (node.status !== START) {\r\n    temp.push([PATH, maze[node.height][node.width]]);\r\n    node = maze[node.parent[0]][node.parent[1]];\r\n  }\r\n  pathSize = temp.length;\r\n\r\n  for (var i = temp.length - 1; i >= 0; i--) animation.push(temp[i]);\r\n}\r\n\r\nexport default bfs;\r\n","class node {\r\n  constructor(id, height, width, status) {\r\n    this.id = id;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.status = status;\r\n    this.parent = null;\r\n    this.g = 0;\r\n    this.h = 0;\r\n    this.f = this.g + this.h;\r\n    this.distance = Infinity;\r\n  }\r\n}\r\n\r\nexport default node;\r\n\r\n// module.exports = node;\r\n","\r\nimport { SPACE, START, TARGET, VISITED, PATH } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize\r\n\r\nfunction dfs(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dfsImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dfsImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    let dfsRun = true\r\n    var currentPoint\r\n\r\n    var gray = new Deque();\r\n    gray.push(startPoint)\r\n\r\n    while (dfsRun) {\r\n\r\n        if (gray.length === 0)\r\n            dfsRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            currentPoint = gray.pop() // this will be the parent\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dfsRun = false;\r\n\r\n            else {\r\n\r\n                // paint pt VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n                // go right\r\n                if (dfsRun && currentPoint.width + 1 < maze[0].length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width + 1, maze, gray)\r\n\r\n                // go up\r\n                if (dfsRun && currentPoint.height + 1 < maze.length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height + 1, currentPoint.width, maze, gray)\r\n\r\n                // go left\r\n                if (dfsRun && currentPoint.width > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width - 1, maze, gray)\r\n\r\n                // go down\r\n                if (dfsRun && currentPoint.height > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height - 1, currentPoint.width, maze, gray)\r\n\r\n                if (!dfsRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n\r\n    if (maze[height][width].status === TARGET)\r\n        return false\r\n\r\n    if (maze[height][width].status === SPACE) {\r\n        // add it to gray\r\n        // maze[height][width].status = GRAY;\r\n        maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n        gray.push(maze[height][width])\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\nexport default dfs;","\r\nimport { START, TARGET, VISITED, PATH, WALL } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction aStar(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    aStarImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\n\r\nfunction aStarImplementation(grid, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var openList = [];\r\n    openList.push(startPoint);\r\n\r\n    while (openList.length > 0) {\r\n\r\n        var lowInd = 0;\r\n        for (let i = 0; i < openList.length; i++) {\r\n            if (openList[i].f <= openList[lowInd].f) { lowInd = i; }\r\n        }\r\n        var currentNode = openList[lowInd];\r\n        openList.splice(lowInd, 1)\r\n\r\n        if (grid[currentNode.height][currentNode.width].status === TARGET) {\r\n            ShowPath(currentNode.parent, grid, animation)\r\n            return\r\n        }\r\n\r\n        if (grid[currentNode.height][currentNode.width].status !== START) {\r\n            grid[currentNode.height][currentNode.width].status = VISITED;\r\n            animation.push([VISITED, grid[currentNode.height][currentNode.width]])\r\n        }\r\n\r\n        var neighbors = getNeighbors(grid, currentNode);\r\n\r\n        for (let i = 0; i < neighbors.length; i++) {\r\n            var neighbor = neighbors[i];\r\n            if (neighbor.status === VISITED || neighbor.status === WALL)\r\n                continue;\r\n\r\n            var gScore = currentNode.g + 1;\r\n            var gScoreIsBest = false;\r\n\r\n\r\n            if (!openList.includes(neighbor)) {\r\n\r\n                gScoreIsBest = true;\r\n                neighbor.g = gScore\r\n                neighbor.h = heuristic(neighbor.height, neighbor.width, targetPoint.height, targetPoint.width);\r\n                openList.push(neighbor);\r\n            }\r\n            else if (gScore < neighbor.g) {\r\n                gScoreIsBest = true;\r\n            }\r\n\r\n            if (gScoreIsBest) {\r\n                neighbor.parent = currentNode;\r\n                neighbor.g = gScore;\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nfunction heuristic(nx, ny, ex, ey) {\r\n    var d1 = Math.abs(ex - nx);\r\n    var d2 = Math.abs(ey - ny);\r\n    return d1 + d2;\r\n}\r\n\r\nfunction getNeighbors(grid, node) {\r\n    var ret = [];\r\n    var x = node.height;\r\n    var y = node.width;\r\n\r\n    if (grid[x - 1] && grid[x - 1][y]) {\r\n        ret.push(grid[x - 1][y]);\r\n    }\r\n    if (grid[x + 1] && grid[x + 1][y]) {\r\n        ret.push(grid[x + 1][y]);\r\n    }\r\n    if (grid[x][y - 1] && grid[x][y - 1]) {\r\n        ret.push(grid[x][y - 1]);\r\n    }\r\n    if (grid[x][y + 1] && grid[x][y + 1]) {\r\n        ret.push(grid[x][y + 1]);\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction ShowPath(node, grid, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, grid[node.height][node.width]])\r\n        node = node.parent\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n}\r\n\r\nexport default aStar;\r\n\r\n","\r\n\r\nimport { SPACE, START, TARGET, VISITED, GRAY, PATH } from '../Components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction dijkstra(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dijkstraImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dijkstraImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var dijkstraRun = true\r\n    var currentPoint\r\n\r\n    var PrioritGray = []\r\n    PrioritGray.push(startPoint)\r\n\r\n\r\n    while (dijkstraRun) {\r\n\r\n        if (PrioritGray.length === 0)\r\n            dijkstraRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            // this will be the parent\r\n            var indx = 0\r\n            for (var w = 0; w < PrioritGray.length; w++) {\r\n                if (PrioritGray[w].distance > PrioritGray[indx].distance) {\r\n                    indx = w\r\n                }\r\n            }\r\n            currentPoint = PrioritGray[indx]\r\n            PrioritGray.splice(indx, 1)\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dijkstraRun = false;\r\n\r\n            else {\r\n\r\n                // paint current VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n\r\n                // go up\r\n                if (dijkstraRun && currentPoint.height > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height - 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go down\r\n                if (dijkstraRun && currentPoint.height + 1 < maze.length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height + 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go right\r\n                if (dijkstraRun && currentPoint.width + 1 < maze[0].length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width + 1, maze, PrioritGray)\r\n\r\n                // go left\r\n                if (dijkstraRun && currentPoint.width > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width - 1, maze, PrioritGray)\r\n\r\n                if (!dijkstraRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, targetPoint, height, width, maze, PrioritGray) {\r\n\r\n    var neighbor = maze[height][width]\r\n\r\n    if (neighbor.status === TARGET)\r\n        return false\r\n\r\n    if (neighbor.status === SPACE) {\r\n        // add it to gray\r\n        neighbor.status = GRAY;\r\n        neighbor.parent = [currentPoint.height, currentPoint.width];\r\n\r\n        neighbor.distance = currentPoint.distance + 1\r\n\r\n\r\n        maze[height][width] = neighbor\r\n        PrioritGray.push(neighbor)\r\n    }\r\n\r\n\r\n    return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\n\r\nexport default dijkstra;","import React from \"react\";\r\n\r\nimport \"./Pathfinding.css\";\r\nimport node from \"./node.js\";\r\n\r\nimport bfs from \"../../algorithms/bfs.js\";\r\nimport dfs from \"../../algorithms/dfs.js\";\r\nimport aStar from \"../../algorithms/aStar.js\";\r\nimport dijkstra from \"../../algorithms/dijkstra.js\";\r\n\r\nexport const WALL = \"wall\";\r\nexport const SPACE = \"space\";\r\nexport const START = \"start\";\r\nexport const TARGET = \"target\";\r\nexport const VISITED = \"visit\";\r\nexport const GRAY = \"gray\";\r\nexport const PATH = \"path\";\r\n\r\nexport const BFS = \"BFS\";\r\nexport const DFS = \"DFS\";\r\nexport const ASTAR = \"A* Search\";\r\nexport const DIJKSTRA = \"Dijkstra\";\r\n\r\nconst BIG_NODE_SIZE = 45;\r\nconst MEDIUM_NODE_SIZE = 35;\r\nconst SMALL_NODE_SIZE = 25;\r\n\r\nconst FAST = 1;\r\nconst AVERAGE = 25;\r\nconst SLOW = 50;\r\n\r\nclass Pathfinding extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      grid: [],\r\n      algorithm: \"\",\r\n      nodeSize: MEDIUM_NODE_SIZE,\r\n      startPoint: { height: 1, width: 1 },\r\n      targetPoint: { height: 2, width: 2 },\r\n      isAlgorithmRun: false,\r\n      animations: [],\r\n      visitedNodesNumber: 0,\r\n      pathNodesNumber: 0,\r\n      showPath: false,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      clearBoard: false,\r\n      speed: AVERAGE,\r\n      previousStartNodeStatus: SPACE,\r\n      previousEndNodeStatus: SPACE,\r\n      mouseIsPressed: false,\r\n      startNodePressed: false,\r\n      EndNodePressed: false,\r\n    };\r\n\r\n    this.setUpGrid = this.setUpGrid.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.runAlgorithm = this.runAlgorithm.bind(this);\r\n    this.changeBoard = this.changeBoard.bind(this);\r\n    this.runanimation = this.runanimation.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    this.setUpGrid(this.state.nodeSize, this.state.clearBoard);\r\n  }\r\n\r\n  async setUpGrid(size, clearBoard) {\r\n    const grid = [];\r\n    let i, j;\r\n    let height = Math.floor((this.state.height - 160) / size);\r\n    let width = Math.floor((this.state.width - 50) / size);\r\n\r\n    await this.clearpath();\r\n\r\n    let id = 0;\r\n    for (i = 0; i < height; i++) {\r\n      grid[i] = [];\r\n      for (j = 0; j < width; j++) {\r\n        grid[i][j] = new node(++id, i, j, SPACE);\r\n      }\r\n    }\r\n\r\n    // set walls\r\n    if (!clearBoard) {\r\n      for (i = 0; i < height; i++) {\r\n        for (j = 0; j < width; j++) {\r\n          if (i % 2 === 0) {\r\n            // mostly walls\r\n            if (Math.random() * 100 < 35) grid[i][j].status = WALL;\r\n          } else {\r\n            // mostly spaces\r\n            if (Math.random() * 100 < 25) grid[i][j].status = WALL;\r\n          }\r\n        }\r\n      }\r\n      let xStart = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yStart = Math.floor(Math.random() * (width - 1) + 1);\r\n      let xEnd = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yEnd = Math.floor(Math.random() * (width - 1) + 1);\r\n      grid[xStart][yStart].status = START;\r\n      grid[xEnd][yEnd].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[xEnd][yEnd],\r\n        startPoint: grid[xStart][yStart],\r\n      });\r\n    } else {\r\n      grid[5][5].status = START;\r\n      grid[height - 5][width - 5].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[height - 5][width - 5],\r\n        startPoint: grid[5][5],\r\n      });\r\n    }\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  async runAlgorithm(grid, algorithm, startPoint, targetPoint, withAnimations) {\r\n    if (algorithm === \"\") return;\r\n\r\n    let fun =\r\n      algorithm === BFS\r\n        ? bfs\r\n        : algorithm === DFS\r\n        ? dfs\r\n        : algorithm === ASTAR\r\n        ? aStar\r\n        : algorithm === DIJKSTRA\r\n        ? dijkstra\r\n        : null;\r\n\r\n    if (!fun) return;\r\n\r\n    await this.clearpath();\r\n    var result = fun(grid, startPoint, targetPoint);\r\n\r\n    this.setState({\r\n      animations: result.animation,\r\n      isAlgorithmRun: true,\r\n      pathNodesNumber: result.pathSize,\r\n      visitedNodesNumber: result.animation.length - result.pathSize,\r\n      showPath: true,\r\n    });\r\n\r\n    if (withAnimations)\r\n      this.runanimation(JSON.parse(JSON.stringify(result.animation)));\r\n    else this.changePath(result.animation);\r\n  }\r\n\r\n  runanimation(animations) {\r\n    if (!animations.length) {\r\n      setTimeout(() => {\r\n        this.setState({ isAlgorithmRun: false });\r\n      }, 100);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      var node = animations[0][1];\r\n\r\n      if (animations[0][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node\";\r\n\r\n      animations.shift();\r\n      this.runanimation(animations);\r\n    }, this.state.speed);\r\n  }\r\n\r\n  changePath(animations) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      var node = animations[i][1];\r\n      if (animations[i][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node2\";\r\n    }\r\n    this.setState({ isAlgorithmRun: false });\r\n  }\r\n\r\n  async clearpath() {\r\n    const animations = this.state.animations;\r\n    const grid = this.state.grid;\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const node = animations[i][1];\r\n\r\n      if (grid[node.height][node.width].status === SPACE)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"space-node\";\r\n\r\n      if (grid[node.height][node.width].status === WALL)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"wall-node\";\r\n\r\n      grid[node.height][node.width].h = 0;\r\n      grid[node.height][node.width].g = 0;\r\n      grid[node.height][node.width].distance = Infinity;\r\n    }\r\n    this.setState({\r\n      grid: grid,\r\n      animations: [],\r\n      pathNodesNumber: 0,\r\n      visitedNodesNumber: 0,\r\n      showPath: false,\r\n    });\r\n  }\r\n\r\n  changeBoard(status) {\r\n    this.setState({ clearBoard: status });\r\n    this.setUpGrid(this.state.nodeSize, status);\r\n  }\r\n\r\n  changeSize(size) {\r\n    this.setState({ nodeSize: size });\r\n    this.setUpGrid(size, this.state.clearBoard);\r\n  }\r\n\r\n  onMouseDown(rowIdx, nodeIdx) {\r\n    const grid = this.state.grid;\r\n    var node = grid[rowIdx][nodeIdx];\r\n\r\n    grid[rowIdx][nodeIdx].status =\r\n      node.status === WALL ? SPACE : node.status === SPACE ? WALL : node.status;\r\n\r\n    if (grid[rowIdx][nodeIdx].status === START)\r\n      this.setState({ startNodePressed: true });\r\n\r\n    if (grid[rowIdx][nodeIdx].status === TARGET)\r\n      this.setState({ EndNodePressed: true });\r\n\r\n    this.setState({ grid: grid, mouseIsPressed: true });\r\n  }\r\n\r\n  onMouseEnter(rowIdx, nodeIdx) {\r\n    if (!this.state.mouseIsPressed) return;\r\n\r\n    const grid = this.state.grid;\r\n\r\n    if (!this.state.startNodePressed && !this.state.EndNodePressed) {\r\n      var node = grid[rowIdx][nodeIdx];\r\n      grid[rowIdx][nodeIdx].status =\r\n        node.status === WALL\r\n          ? SPACE\r\n          : node.status === SPACE\r\n          ? WALL\r\n          : node.status;\r\n    }\r\n\r\n    if (\r\n      this.state.startNodePressed &&\r\n      grid[rowIdx][nodeIdx].status !== TARGET\r\n    ) {\r\n      let startNode = this.state.startPoint;\r\n      let previousStartNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[startNode.height][\r\n        startNode.width\r\n      ].status = this.state.previousStartNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = START;\r\n      this.setState({\r\n        startPoint: grid[rowIdx][nodeIdx],\r\n        previousStartNodeStatus: previousStartNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          grid[rowIdx][nodeIdx],\r\n          this.state.targetPoint,\r\n          false\r\n        );\r\n    }\r\n\r\n    if (this.state.EndNodePressed && grid[rowIdx][nodeIdx].status !== START) {\r\n      let endNode = this.state.targetPoint;\r\n      let previousEndNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[endNode.height][\r\n        endNode.width\r\n      ].status = this.state.previousEndNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[rowIdx][nodeIdx],\r\n        previousEndNodeStatus: previousEndNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          this.state.startPoint,\r\n          grid[rowIdx][nodeIdx],\r\n          false\r\n        );\r\n    }\r\n\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  onMouseUp() {\r\n    if (this.state.startNodePressed)\r\n      this.setState({ mouseIsPressed: false, startNodePressed: false });\r\n    else if (this.state.EndNodePressed)\r\n      this.setState({ mouseIsPressed: false, EndNodePressed: false });\r\n    else this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      grid,\r\n      algorithm,\r\n      startPoint,\r\n      targetPoint,\r\n      isAlgorithmRun,\r\n      nodeSize,\r\n      visitedNodesNumber,\r\n      pathNodesNumber,\r\n      showPath,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        {/* toolbar */}\r\n        <div className=\"main-bar row\">\r\n          {/* DEV */}\r\n          <div className=\"devop\">\r\n            <h6 className=\"developed\">Developed by</h6>\r\n            <h6 className=\"developed\">Ali Khutaba</h6>\r\n          </div>\r\n\r\n          {/* DEV */}\r\n          <div className=\"social-pic\">\r\n            <a\r\n              href=\"https://www.linkedin.com/in/ali-khutaba-843627173/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img\r\n                className=\"linkedin-img\"\r\n                src=\"https://www.freepnglogos.com/uploads/linkedin-logo-hd-png-3.png\"\r\n                alt=\"Click her\"\r\n              ></img>\r\n            </a>\r\n          </div>\r\n\r\n          {/* Github */}\r\n          <div className=\"social-pic\">\r\n            <a\r\n              href=\"https://github.com/alikhutaba\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img\r\n                className=\"github-img\"\r\n                src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/i/2b14985a-c66e-4dbd-b09c-609fe0678dae/d5ariic-ff63c049-4a2e-46bb-bae5-a420d50a4e54.png\"\r\n                alt=\"Click her\"\r\n              ></img>\r\n            </a>\r\n          </div>\r\n\r\n          {/* algorithm Buttons */}\r\n          <div className=\"main-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              {algorithm === \"\" ? \"Algorithm\" : algorithm}\r\n              <a className=\"dropdown-toggle\"></a>{\" \"}\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu\">\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.setState({ algorithm: BFS })\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\" dropdown-item\"\r\n              >\r\n                <h6>Breadth First Search (BFS)</h6>\r\n              </button>\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.setState({ algorithm: DFS })\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Depth First Search (DFS)</h6>\r\n              </button>\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.setState({ algorithm: DIJKSTRA })\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Dijkstra Algorithm</h6>\r\n              </button>\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.setState({ algorithm: ASTAR })\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>A* Search</h6>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* board Buttons */}\r\n          <div className=\"main-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              Board<a className=\"dropdown-toggle\"></a>\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu\">\r\n              <button\r\n                onClick={!isAlgorithmRun ? () => this.changeBoard(false) : null}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Random Maze</h6>\r\n              </button>\r\n              <button\r\n                onClick={!isAlgorithmRun ? () => this.clearpath() : null}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Clear Path</h6>\r\n              </button>\r\n              <button\r\n                onClick={!isAlgorithmRun ? () => this.changeBoard(true) : null}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Clear Board</h6>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Size Buttons */}\r\n          <div className=\"main-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              Nodes<a className=\"dropdown-toggle\"></a>\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu\">\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun ? () => this.changeSize(BIG_NODE_SIZE) : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Big Nodes</h6>\r\n              </button>\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.changeSize(MEDIUM_NODE_SIZE)\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Medium Nodes</h6>\r\n              </button>\r\n              <button\r\n                onClick={\r\n                  !isAlgorithmRun\r\n                    ? () => this.changeSize(SMALL_NODE_SIZE)\r\n                    : null\r\n                }\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Small Nodes</h6>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Size Buttons */}\r\n          <div className=\"main-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-primary\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              Speed<a className=\"dropdown-toggle\"></a>\r\n            </button>\r\n\r\n            <div className=\"dropdown-menu\">\r\n              <button\r\n                onClick={() => this.setState({ speed: FAST })}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Fast</h6>\r\n              </button>\r\n              <button\r\n                onClick={() => this.setState({ speed: AVERAGE })}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Average</h6>\r\n              </button>\r\n              <button\r\n                onClick={() => this.setState({ speed: SLOW })}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <h6>Slow</h6>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* run algorithm */}\r\n          <div className=\"main-button\">\r\n            <button\r\n              onClick={\r\n                !isAlgorithmRun\r\n                  ? () =>\r\n                      this.runAlgorithm(\r\n                        grid,\r\n                        algorithm,\r\n                        startPoint,\r\n                        targetPoint,\r\n                        true\r\n                      )\r\n                  : null\r\n              }\r\n              style={isAlgorithmRun ? { cursor: \"not-allowed\" } : null}\r\n              type=\"button\"\r\n              className=\" btn btn-outline-danger\"\r\n            >\r\n              {!isAlgorithmRun ? \"Run\" : algorithm}\r\n            </button>\r\n          </div>\r\n\r\n          {/* info */}\r\n          <div className=\"info\">\r\n            <div>\r\n              <h6 className=\"info-font\">\r\n                {algorithm === \"\"\r\n                  ? \"Choose an algorithm\"\r\n                  : \"Algorithm : \" + algorithm}\r\n              </h6>\r\n            </div>\r\n            <div>\r\n              <h6\r\n                className=\"info-font\"\r\n                style={{ display: showPath ? \"block\" : \"none\" }}\r\n              >\r\n                Visited {visitedNodesNumber} Nodes. Path length{\" \"}\r\n                {pathNodesNumber}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-12\" id=\"mainBoardID\">\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  return (\r\n                    <div\r\n                      id={`${rowIdx}-${nodeIdx}`}\r\n                      key={nodeIdx}\r\n                      className={\r\n                        node.status === SPACE\r\n                          ? \"space-node\"\r\n                          : node.status === WALL\r\n                          ? \"wall-node\"\r\n                          : node.status === VISITED\r\n                          ? \"visit-node\"\r\n                          : node.status === PATH\r\n                          ? \"path-node\"\r\n                          : node.status === START\r\n                          ? \"start-node\"\r\n                          : node.status === TARGET\r\n                          ? \"target-node\"\r\n                          : \"space-node\"\r\n                      }\r\n                      style={{\r\n                        height: nodeSize + \"px\",\r\n                        width: nodeSize + \"px\",\r\n                      }}\r\n                      onMouseDown={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseDown(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseEnter={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseEnter(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseUp={\r\n                        !isAlgorithmRun ? () => this.onMouseUp() : null\r\n                      }\r\n                    ></div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pathfinding;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nimport Pathfinding from \"./Components/Pathfinding/Pathfinding\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Pathfinding />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}